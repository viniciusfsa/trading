{
    "contents" : "#DETECTA DIVERGENCIA DE ALTA\n\nrm(list = ls(all = TRUE))\nrequire(quantmod)\n\n#AAPL C INTC SPY IBM\nempresa = getSymbols('IBM',from='2003-01-01',to='2013-12-31', auto.assign=FALSE)\n\npreco = Ad(empresa)\ntotal = length(preco)\nmacd = MACD(Ad(empresa))\nhistograma = macd[,1]-macd[,2]\n\ndiasFrente = 15\nlim = 0\nnDivergenciasAlta = 0\nnConfirmacoesAlta = 0\nnDivergenciasBaixa = 0\nnConfirmacoesBaixa = 0\nvetorDivergenciasAlta=c()\nvetorDivergenciasBaixa=c()\nindiceVetorDivergenciasAlta=1\nindiceVetorDivergenciasBaixa=1\n\n\nprecoMatriz = data.matrix(as.data.frame(preco))\ntamanhoPreco = length(preco);\n\n#Cria Colula de Divergências de Baixa\ndivsBaixa = seq(0, 0, length.out=tamanhoPreco);\nfor(p in 1:length(divsBaixa)){\n  divsBaixa[p]=NA;\n}\npreco=cbind(preco,divsBaixa=divsBaixa);\n\n#Cria Coluna de Divergência de Alta\ndivsAlta = seq(0, 0, length.out=tamanhoPreco);\nfor(p in 1:length(divsAlta)){\n  divsAlta[p]=NA;\n}\npreco=cbind(preco,divsAlta=divsAlta);\n\n\n\n\n#########################################################################################################\n#############################DETECTANDO DIVERGÊNCIAS DE BAIXA############################################\n#########################################################################################################\ni = 34 #Ponto Inicial onde tem valores validos para o Histograma\nmarcadorProximo = i\nwhile(TRUE) {\n    marcador = marcadorProximo\n    i = marcador\n    blocoA=c()\n    blocoB=c()\n    blocoC=c()\n\n    #Descartando possíveis valores negativos no início\n    while(histograma[i]<0){\n      i=i+1\n      if(i>=total)\n        break();\n    }\n    #detectando Bloco A (Positivo)\n    indexA = 1\n    while(histograma[i]>0){\n      blocoA[indexA]= histograma[i]\n      indexA = indexA + 1\n      i= i + 1\n      if(i>=total)\n        break();\n    }\n    #detectando Bloco B\n    indexB = 1\n    while(histograma[i]<0){\n      blocoB[indexB]= histograma[i]\n      indexB = indexB + 1\n      i= i + 1\n      if(i>=total)\n        break();\n    }\n    marcadorProximo = i\n\n    #detectando Bloco C\n    indexC = 1\n    while(histograma[i]>0){\n      blocoC[indexC]= histograma[i]\n      indexC = indexC + 1\n      i= i + 1\n      if(i>=total)\n        break();\n    }\n\n    if(i>=total)\n      break();\n\n    # Definindo as posições dos máximos dos Blocos A e C\n    posicaoMaxA = marcador + which.max(blocoA)-1\n    posicaoMaxC = marcador + length(blocoA)+length(blocoB)+which.max(blocoC)-1\n\n    #Cálculo dos máximos dos blocos A e C\n    maxA = max(blocoA)\n    maxC = max(blocoC)\n\n    #Cálculo dos preços nos dias dos máximos de A e de C\n    precoA = precoMatriz[posicaoMaxA];\n    precoC = precoMatriz[posicaoMaxC];\n\n    final = i+diasFrente\n    if((maxA > maxC)&(precoA<precoC)&(length(blocoA)>lim)&(length(blocoC)>lim)) {\n      nDivergenciasBaixa = nDivergenciasBaixa+1\n      preco[posicaoMaxC,2]=preco[posicaoMaxC,1]\n      preco1 = precoMatriz[i]\n      if(final>total)\n       diasFrente = total-i\n\n      vetorDivergenciasBaixa[indiceVetorDivergenciasBaixa]=as.Date(index(preco[posicaoMaxC]));\n      vetorDivergenciasBaixa[indiceVetorDivergenciasBaixa+1]=precoMatriz[posicaoMaxC,1];\n      indiceVetorDivergenciasBaixa = indiceVetorDivergenciasBaixa+2;\n\n      preco15 = precoMatriz[i+diasFrente]\n      if(preco15<preco1){\n        nConfirmacoesBaixa = nConfirmacoesBaixa + 1\n      }\n    }\n\n    if(final>total)\n      break();\n}#FIM DA DETECÇÃO DE DIVERGÊNCIA DE BAIXA\n\n\n\n\n\n#########################################################################################################\n#############################DETECTANDO DIVERGÊNCIAS DE ALTA#############################################\n#########################################################################################################\n\n\ni = 34 #Ponto Inicial onde tem valores validos para o Histograma\nmarcadorProximo = i\nwhile(TRUE) {\n  marcador = marcadorProximo\n  i = marcador\n  blocoA=c()\n  blocoB=c()\n  blocoC=c()\n\n  #Descartando possíveis valores positivos no início\n  while(histograma[i]>0){\n    i=i+1\n    if(i>=total)\n      break();\n  }\n  #detectando Bloco A (NEGATIVO)\n  indexA = 1\n  while(histograma[i]<0){\n    blocoA[indexA]= histograma[i]\n    indexA = indexA + 1\n    i= i + 1\n    if(i>=total)\n      break();\n  }\n  #detectando Bloco B\n  indexB = 1\n  while(histograma[i]>0){\n    blocoB[indexB]= histograma[i]\n    indexB = indexB + 1\n    i= i + 1\n    if(i>=total)\n      break();\n  }\n  marcadorProximo = i\n\n  #detectando Bloco C\n  indexC = 1\n  while(histograma[i]<0){\n    blocoC[indexC]= histograma[i]\n    indexC = indexC + 1\n    i= i + 1\n    if(i>=total)\n      break();\n  }\n\n  if(i>=total)\n    break();\n\n  # Definindo as posições dos mínimos dos Blocos A e C\n  posicaoMinA = marcador + which.min(blocoA)-1\n  posicaoMinC = marcador + length(blocoA)+length(blocoB)+which.min(blocoC)-1\n\n  #Cálculo dos mínimos dos blocos A e C\n  minA = min(blocoA)\n  minC = min(blocoC)\n\n  #Cálculo dos mínimos nos dias dos máximos de A e de C\n  precoA = precoMatriz[posicaoMinA];\n  precoC = precoMatriz[posicaoMinC];\n\n\n  final = i+diasFrente\n  if((minA < minC)&(precoA>precoC)&(length(blocoA)>lim)&(length(blocoC)>lim)) {\n    nDivergenciasAlta = nDivergenciasAlta+1\n    preco[posicaoMinC,3]=preco[posicaoMinC,1]\n    preco1 = precoMatriz[i]\n    if(final>total)\n      diasFrente = total-i\n    vetorDivergenciasAlta[indiceVetorDivergenciasAlta]=as.Date(index(preco[posicaoMinC]));\n    vetorDivergenciasAlta[indiceVetorDivergenciasAlta+1]=precoMatriz[posicaoMinC,1];\n    indiceVetorDivergenciasAlta = indiceVetorDivergenciasAlta+2;\n\n    preco15 = precoMatriz[i+diasFrente]\n    if(preco15>preco1){\n      nConfirmacoesAlta = nConfirmacoesAlta + 1\n    }\n  }\n\n  if(final>total)\n    break();\n  #print('')\n}#FIM DA DETECÇÃO DE DIVERGÊNCIA DE ALTA\n\n\n\nvetorDivergenciasAlta=matrix(vetorDivergenciasAlta,ncol=2,byrow=TRUE);\nvetorDivergenciasBaixa=matrix(vetorDivergenciasBaixa,ncol=2,byrow=TRUE);\n\n\n\npar(mfrow=c(2,1))\nplot(preco[,1],main=\"Preço\")\npoints(preco[,2],type=\"b\",col=\"red\",lwd =5)\npoints(preco[,3],type=\"b\",col=\"blue\",lwd = 5)\nplot(histograma,main=\"Histograma MACD\")\n\n\n",
    "created" : 1438776716122.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "437110543",
    "id" : "5A5FCEE",
    "lastKnownWriteTime" : 1438776727,
    "path" : "~/Workspace R/Trading/R/meuScript.R",
    "project_path" : "R/meuScript.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}